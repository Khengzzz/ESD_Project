version: "3.8"

volumes:
  rabbitmq_data:

services:

  ##################################
  # Screening
  ##################################
  screening:
    build:
      context: ./
      dockerfile: screening.Dockerfile
    #image: linyubin123/screening:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/screening
      PYTHONUNBUFFERED: 1
    ports:
      - "5000:5000"


  ##################################
  # Booking
  ##################################
  bookings:
    build:
      context: ./
      dockerfile: bookings.Dockerfile
    #image: linyubin123/bookings:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/booking_management
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"


  ##################################
  # Transaction
  ##################################
  transaction:
    build:
      context: ./
      dockerfile: transaction.Dockerfile
    #image: linyubin123/transaction:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/transactions
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"

  ##################################
  # Subscriber
  ##################################
  subscriber:
    build:
      context: ./
      dockerfile: subscriber.Dockerfile
    #image: linyubin123/bookings:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/subscriber
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"

  ##################################
  # Notification
  ##################################




  ###############################################
  # Booking Orchestrator
  ###############################################
  # booking_orchestrator:
  #   build:
  #     context: ./
  #     dockerfile: booking_orchestrator.Dockerfile
  #   image: linyubin123/booking_orchestrator:esd
  #   restart: always
  #   depends_on:
  #     - screening
  #     - bookings
  #   environment:
  #     # screening_URL: http://order:5001/order
  #     # bookings_URL: http://shipping_record:5002/shipping_record 
  #     PYTHONUNBUFFERED: 1
  #   ports:
  #     - "5100:5100"

  ###############################################
  # Payment Orchestrator
  ###############################################
  payment_orchestrator:
    build:
      context: ./
      dockerfile: payment_orchestrator.Dockerfile
    image: linyubin123/payment_orchestrator:esd
    restart: always
    depends_on:
      - bookings
      #- transaction
      #- notification
    environment:
      seat_URL: http://screening:5000/manage_seats/{screening_id}/book
      booking_URL_get_booking: http://bookings:5001/bookings/{booking_id}
      booking_URL_confirm: http://bookings:5001/bookings/{booking_id}/confirm
      PYTHONUNBUFFERED: 1
    ports:
      - "5101:5101"

  ###############################################
  # Refund Orchestrator
  ###############################################
  refund_orchestrator:
    build:
      context: ./
      dockerfile: refund_orchestrator.Dockerfile
    image: linyubin123/refund_orchestrator:esd
    restart: always
    depends_on:
      - bookings
      #- transaction
      #- subscriber
      #- notification
    environment:
      #seat_URL: http://screening:5000/manage_seats/{screening_id}/book
      #booking_URL_get_booking: http://bookings:5001/bookings/{booking_id}
      #booking_URL_confirm: http://bookings:5001/bookings/{booking_id}/confirm
      PYTHONUNBUFFERED: 1
    ports:
      - "5102:5102"